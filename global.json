{
  "sdk": {
    "version": "8.0.204",
    "rollForward": "latestPatch",
    "allowPrerelease": true
  },
  "scripts": {
    "w:update": "dotnet workload update",
    "w:restore": "dotnet workload restore Trace.sln",
    "docker": "docker-compose up -d cache messaging scylladb db",
    "dev": "dotnet r docker;dotnet watch --project AppHost",
    "run": "dotnet r docker;dotnet run --project AppHost",
    "docker:down": "docker-compose down -v",
    "docker:refresh": "dotnet r docker:down;dotnet r docker;dotnet r build",
    "docker:build": "docker compose --env-file .env -f docker/projects.yml build",
    "docker:push": "docker compose --env-file .env -f docker/projects.yml push",
    "docker:publish": "dotnet r docker:build; dotnet r docker:push",
    "fresh": "dotnet tool restore;dotnet r docker:refresh",
    "lint": "dotnet format Trace.sln",
    "install": "dotnet restore && dotnet build && pnpm install",
    "clean": "dotnet clean && pnpm clean && rm -rf ./**/{bin,obj,node_modules} && pnpm store prune",
    "build": "dotnet build --configuration Debug",
    "a:generate": "dotnet aspirate generate --include-dashboard --skip-build --project-path AppHost/",
    "a:compose": "dotnet aspirate generate --include-dashboard --skip-build --output-format compose --project-path AppHost/",
    "a:apply": "cd AppHost; dotnet aspirate apply",
    "a:destroy": "cd AppHost; dotnet aspirate destroy",
    "a:build": "cd AppHost; dotnet aspirate build",
    "a:frontend": "kubectl port-forward svc/frontend 4040:8080",
    "m:run": "dotnet ef migrations add --project Infrastructure/Trace.Infrastructure.csproj --startup-project Infrastructure/Trace.Infrastructure.csproj --context Trace.Infrastructure.EFCore.Context.ServiceContext --configuration Debug Initial --output-dir EFCore/Migrations",
    "m:update": "dotnet ef database update --project nfrastructure/Trace.Infrastructure.csproj --startup-project Infrastructure/Trace.Infrastructure.csproj --context Trace.Infrastructure.EFCore.Context.ServiceContext --configuration Debug"
  }
}
